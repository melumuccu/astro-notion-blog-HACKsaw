---
// XXX: getPostLink „Åå‰ΩïÊïÖ„ÅãÊ∂à„Åï„Çå„Çã„Åü„ÇÅprettier-plugin-astro-organize-imports„Çí"astroOrganizeImportsMode": "SortAndCombine"„ÅßÈÅãÁî®„Åô„Çã
import { IconArrowLink } from '@/assets'
import { getPostLink } from '../../lib/blog-helpers.ts'
import type { Post } from '../../lib/interfaces.ts'
import { getPostByPageId } from '../../lib/notion/client'
import '../../styles/notion-color.css'

export interface Props {
  pageId: string
}

const { pageId } = Astro.props

let post: Post = null
if (pageId) {
  post = await getPostByPageId(pageId)
}
---

{
  post ? (
    <a href={getPostLink(post.Slug)} class="link">
      <>
        <span class="icon">
          {post.Icon && post.Icon.Type === 'emoji' ? (
            post.Icon.Emoji
          ) : post.Icon && post.Icon.Type === 'external' ? (
            <img
              src={post.Icon.Url}
              class="notion-icon"
              alt="Post title icon in a page link"
            />
          ) : (
            'üìÑ'
          )}
          <img
            src={IconArrowLink.src}
            class="icon-link"
            alt="Arrow icon of a page link"
          />
        </span>
        <span class="text">{post.Title}</span>
      </>
    </a>
  ) : (
    <a class="link">
      <span class="icon">
        üö´
        <img
          src={IconArrowLink.src}
          class="icon-link"
          alt="Arrow icon of a page link"
        />
      </span>
      <span class="text not-found">Post not found</span>
    </a>
  )
}

<style>
  a.link {
    display: inline-flex;
    gap: 4px;
    font-weight: 600;
  }

  span.icon {
    position: relative;
    flex-shrink: 0;
    height: fit-content;
  }

  span.icon img.notion-icon {
    position: relative;
    flex-shrink: 0;
    width: 1.3em;
    height: 1.3rem;
    vertical-align: sub;
  }

  span.icon img.icon-link {
    position: absolute;
    top: 1em;
    right: 0;
    display: block;
    width: 8px;
    height: 8px;
  }

  span.text {
    font-weight: 500;
    color: var(--fg);
    text-decoration: underline;
  }

  span.text.not-found {
    font-weight: normal;
    text-decoration: none;
  }
</style>
