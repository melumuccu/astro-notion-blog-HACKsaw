---
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import NoContents from '../../../components/NoContents.astro'
import Pagination from '../../../components/Pagination.astro'
import PostDate from '../../../components/PostDate.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostTag from '../../../components/post-tag/PostTag.astro'
import PostTags from '../../../components/post-tag/PostTags.astro'
import type { SelectProperty } from '../../../lib/interfaces.ts'
import {
  getAllTags,
  getNumberOfPagesByTag,
  getPostsByTag,
  getRankedPosts,
} from '../../../lib/notion/client.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
import styles from '../../../styles/blog.module.css'
import Layout from '../Layout.astro'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE, null),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find((t) => t.name === tag)

if (!currentTag) {
  console.error(`Incorrect tag: ${tag}`)
  return
}
---

<Layout title={`Posts in ${tag}`} path={`/posts/${tag}`}>
  <div slot="main" class={styles.main}>
    <header>
      <div class="tag-container">
        <PostTag tag={currentTag} /><span>の記事一覧</span>
      </div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class={styles.post} key={post.Slug}>
            <div class={styles.tagDateWrapper}>
              <PostDate post={post} />
              <PostTags post={post} />
            </div>
            <PostTitle post={post} />
            <PostFeaturedImage post={post} />
            <PostExcerpt post={post} />
          </div>
        ))
      )
    }

    <footer>
      <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    {
      !!rankedPosts.length && (
        <BlogPostsLink heading="おすすめ!" posts={rankedPosts} />
      )
    }
    {!!tags.length && <BlogTagsLink heading="タグ一覧" tags={tags} />}
  </div>
</Layout>

<style>
  .tag-container {
    display: flex;
    gap: 0.25rem;
    align-items: center;
    margin: 0;
    font-size: 1.2rem;
    font-weight: normal;
    line-height: 1.3;
  }

  @media (width <= 640px) {
    .tag-container {
      font-size: 1.15rem;
    }
  }

  .tag-container span.tag {
    padding: 3px 9px;
    background: var(--tag-bg-light-gray);
    border-radius: 4px;
  }
</style>
